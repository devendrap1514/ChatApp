continue
pagy(Group.includes(:users))[1]
pagy(Group.includes(:users))[0]
pagy(Group.includes(:users))
continue
e.message
continue
e.message
e
continue
chunk
continue
chunk
continue
chunk
c
chunk
chunk.size
c
chunk.size
continue
post
c
chunk.size
c
chunk.size
c
chunk.size
c
continue
chunk.size
chunk
chunk.methods
chunk.size
continue
video_tempfile.methods
video_tempfile.type
video_tempfile.format
video_tempfile.size
video_tempfile
n
video_tempfile
n
post.video.methods
post.video
post.video.blob
post.video
post
post.video.blob.filename.to_s
File.extname(post.video.blob.filename.to_s)
continue
relo
exc.message
exc.messages
exc
n
continue
Filesize.from("#{video_tempfile.size} B").pretty
number_to_human_size video_tempfile.methods
video_tempfile.methods
video_tempfile.size
c
continue
c
n
continue
n
continue
FFMPEG::Movie.new(video_tempfile.path)
continue
video_tempfile.size
n
video_tempfile.size
video_tempfile
continue
exc
n
continue
params[0][:file]
params
continue
n
continue
c
continue
images
continue
images
continue
images
continue
Rails.env
@post.thumbnails.attach(images)
images
continue
n
@post.thumbnails.attach(images)
images
Post
continue
params.permit(:image_urls)
params.permit(:image_urls[])
params.permit(image_urls[])
params.require(:post).permit(:image_urls[])
params.require(:post).permit(:image_urls)
create_params
continue
n
params[:image_urls]
params
c
@user.thumbnails.attach(images)
images
n
c
continue
n
images
n
images
n
images
n
thumbnail
n
key
n
continue
minio_url
n
n'
thumbnail_file.size
thumbnail_file.path
minio_url
continue
images
continue
images
n
thumbnail.size
thumbnail
tuhmbnail
continue
thumbnail.path
continue
thumbnail.size
continue
thumbnail.size
continue
n
original_image.size
n
original_image.size
original_image
n
@user
continue
minio_url
minio_urls
continue
n
thumbnail.size
thumbnail
thumnail
n
original_image.size
n
continue
n
thumbnail.size
thumbnail
n
thumbnail.size
n
thumbnail.size
thumbnail
thumnail
n
original_image.size
n
original_image
key
original_image.size
n
original_image.size
original_image
n
key
n
minio_url
continue
thumbnail
original_image
generate_thumbnail_and_attach
continue
n
continue
n
receivable
continue
"Hello" if object.receivable.class.name == 'Group'
if object.receivable.class.name == 'Group'
continue
"Hello" if object.receivable.class.name == 'Group'
object.receivable.class.name == 'Group'
object.receivable.class.name
n
object.receivable
object
continue
@chat
chat
\chat
continue
storage_url_of
continue
n
continue
object.receivable.class.name
object.receivable.class
object.receivable
object.receiable
object.receiable.class
object.receiable.clas
object.receiable
object
continue
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(created_at: :desc).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(created_at: :asc).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(:created_at).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(:created_at)
object.send_messages.or(object.received_messages).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).last
object.send_messages.or(object.received_messages).last
object
continue
object.send_messages.or(object.received_messages).last
object
last1&.created_at <=> last2.created_at
last1&.created_at
last2
last1
last2 = object.received_messages.last
last1 = object.send_messages.last
continue
Message.destroy_all
Messages.destroy_all
last2 || last1
last1.create || last2
last2
last1
last2 = object.received_messages.last
last1 = object.send_messages.last
object
continue
last2 || last1
