continue
storage_url_of
continue
n
continue
object.receivable.class.name
object.receivable.class
object.receivable
object.receiable
object.receiable.class
object.receiable.clas
object.receiable
object
continue
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(created_at: :desc).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(created_at: :asc).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(:created_at).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).order(:created_at)
object.send_messages.or(object.received_messages).last
object.send_messages.limit(1).or(object.received_messages.limit(1)).last
object.send_messages.or(object.received_messages).last
object
continue
object.send_messages.or(object.received_messages).last
object
last1&.created_at <=> last2.created_at
last1&.created_at
last2
last1
last2 = object.received_messages.last
last1 = object.send_messages.last
continue
Message.destroy_all
Messages.destroy_all
last2 || last1
last1.create || last2
last2
last1
last2 = object.received_messages.last
last1 = object.send_messages.last
object
continue
last2 || last1
last1
last1 || last2
last1 | last2
last2
last1
last1 = object.send_messages.last
last2 = object.received_messages.last
last1 = object.received_messages.last
last1 = object.send_messages.last
two
one
second = object.received_messages.last
one = object.send_messages.last
object.received_messages.last
object.send_messages.last
object.received_messages
object.send_messages
oject
object
continue
object.send_messages.last
object.received_messages.last
object.received_messages
object.receive_messages
object.send_messages
object
continue
@message.save
@message.errors.full_messages
@message.save
@group
@message
continue
n
receivable.users.include?(sender)
receivable.users
receivable.groups
receivable
sender.groups
sender
continue
users.create(user_id: creator.id)
users.create
users
continue
object.received_messages.last.created_at
object.received_messages.last
object.received_messages
object.send_messages
object.send_messages.last.created_at
object.send_messages.last
object
continue
"#{@receiver}-users"
continue
"#{current_user}-users"
continue
"#{@receiver}-users"
UsersChannel.broadcast_to("#{@receiver}-users", MessageSerializer.new(@message))
n
continue
@receiver
UserChannel.broadcast_to("#{@receiver}-users", MessageSerializer.new(@message))
nUserChannel.broadcast_to("#{@receiver}-users", MessageSerializer.new(@message))
n
continue
@receiver
